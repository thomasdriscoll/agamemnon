openapi: 3.0.0
info:
  title: Agamemnon
  description: API for cryptocurrencies and their data
  version: 1.0.0
servers:
  - url: 'https://staging.agamemnon.thomas-driscoll.com'
  - url: 'https://agamemnon.thomas-driscoll.com'
paths:
  "/agamemnon/allLabels":
    get:
      description: Returns a list of all cryptos and their symbols
      responses:
        '200':
          description: JSON array of cryptos and symbols
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoLabelResponse'
        '400':
          $ref: '#/components/schemas/BadRequest'
        '401':
          $ref: '#/components/schemas/Unauthorized'


  "/agamemnon/cryptos/{cryptoId}/onboard":
    post:
      description: Onboards a crypto by symbol with daily candle data extending for the past year
      parameters:
        - in: path
          name: cryptoId
          required: true
          schema:
            type: string
      responses:
        '201':
          description: JSON array of cryptos and symbols
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleCryptosResponse'
        '400':
          $ref: '#/components/schemas/BadRequest'
        '401':
          $ref: '#/components/schemas/Unauthorized'
        '404':
          $ref: '#/components/schemas/NotFound'

  "/agamemnon/cryptos/{cryptoId}/dailyvolatility/":
    post:
      description: Adds a crypto by symbol with as frequent of data as possible for the past 5 business days
      parameters:
      - in: path
        name: cryptoId
        required: true
        schema:
          type: string
      responses:
        '201':
          description: JSON array of cryptos and symbols
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleSameDayCryptosResponse'
        '400':
          $ref: '#/components/schemas/BadRequest'
        '401':
          $ref: '#/components/schemas/Unauthorized'
        '404':
          $ref: '#/components/schemas/NotFound'

    delete:
      description: Deletes whatever got added by the POST operation
      parameters:
        - in: path
          name: cryptoId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deletes same day data from database
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: int
                  data:
                    type: none
        '400':
          $ref: '#/components/schemas/BadRequest'
        '401':
          $ref: '#/components/schemas/Unauthorized'
        '404':
          $ref: '#/components/schemas/NotFound'

  "/agamemnon/cryptos/{cryptoId}/range":
    get:
      description: For a provided time range, return the daily candles (no more than a year's worth)
      parameters:
        - in: path
          name: cryptoId
          required: true
          schema:
            type: string
        - in: query
          name: since
          required: false
          schema:
            type: datetime
            default:
              - Three months ago
        - in: query
          name: until
          required: false
          schema:
            type: datetime
            default:
              - Now
      responses:
        '200':
          description: JSON array of cryptos and symbols
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleCryptosResponse'
        '400':
          $ref: '#/components/schemas/BadRequest'
        '401':
          $ref: '#/components/schemas/Unauthorized'
        '404':
          $ref: '#/components/schemas/NotFound'


  "/agamemnon/cryptos/{cryptoId}/calculate":
    get:
      description: Calculates and returns standard deviation and variance of the provided crypto, given a specific time range
      parameters:
        - in: path
          name: cryptoId
          required: true
          schema:
            type: string
        - in: query
          name: since
          required: false
          schema:
            type: datetime
            default:
              - Three months ago
        - in: query
          name: until
          required: false
          schema:
            type: datetime
            default:
              - Now
      responses:
        '200':
          description: JSON array of cryptos and symbols
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoVarianceResponse'
        '400':
          $ref: '#/components/schemas/BadRequest'
        '401':
          $ref: '#/components/schemas/Unauthorized'
        '404':
          $ref: '#/components/schemas/NotFound'


components:
  responses:
    # Error responses are defined to be reusable and default.
    # If an api should have unique error codes/messages, these do not need to be used.
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      #Do we really need this 5xx?
      description: Server has encountered an error while processing request
      content:
        application/json:
          schema:
            $ref: '#components/schemas/Error'

  schemas:
    CryptoLabelResponse:
      type: object
      properties:
        status:
          type: int
        data:
          type: CryptoLabel
    CryptoResponse:
      type: object
      properties:
        status:
          type: int
        data:
          type: Crypto
    MultipleCryptosResponse:
      type: object
      properties:
        status:
          type: int
        data:
          type: array
          items:
            $ref: "#/components/schemas/Crypto"
    MultipleSameDayCryptosResponse:
      type: object
      properties:
        status:
          type: int
        data:
          type: array
          items:
            $ref: "#/components/schemas/SameDayCrypto"
    CryptoVarianceResponse:
      type: object
      properties:
        status:
          type: int
        data:
          type: CryptoVariance
    Crypto:
      type: object
      properties:
        crypto:
          type: string
          example: Apple
        label:
          type: string
          example: APPL
        high:
          type: decimal
        low:
          type: decimal
        open:
          type: decimal
        close:
          type: decimal
        date:
          type: datetime
    CryptoVariance:
      type: object
      properties:
        crypto:
          type: string
          example: Apple
        label:
          type: string
          example: APPL
        since:
          type: dateime
        until:
          type: datetime
        stddev:
          type: float
        variance:
          type: float
    SameDayCrypto:
      type: object
      properties:
        crypto:
          type: string
          example: Apple
        label:
          type: string
          example: APPL
        high:
          type: decimal
        low:
          type: decimal
        open:
          type: decimal
        close:
          type: decimal
        time:
          type: datetime
          example: "4:03 PM 28 October 2020 (this is incorrect but we want specific times)"
    CryptoLabel:
      type: object
      properties:
        crypto:
          type: string
          example: Apple
        label:
          type: string
          example: APPL
    Error:
      # Schema for error response body
      type: object
      properties:
        code:
          type: string
          required: true
        message:
          type: string
          required: true
